//
//  CurrenciesPresenter.swift
//  test
//
//  Created by Daniel Salhuana on 4/7/20.
//  Copyright (c) 2020 Daniel Salhuana. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CurrenciesPresentationLogic {
    func presentSomething(response: Currencies.Something.Response)
    func presentCurrencies(response: Currencies.LoadCurrency.Response)
}

class CurrenciesPresenter: CurrenciesPresentationLogic {
    weak var viewController: CurrenciesDisplayLogic?
    
    // MARK: Do something
    
    func presentSomething(response: Currencies.Something.Response) {
        let viewModel = Currencies.Something.ViewModel()
        viewController?.displaySomething(viewModel: viewModel)
    }
    
    func presentCurrencies(response: Currencies.LoadCurrency.Response) {
        let currencies: [CurrencyViewModel] = response.currencies.map { (currency) -> CurrencyViewModel in
            return parseToCellViewModel(currency: currency)
        }

        let viewModel = Currencies.LoadCurrency.ViewModel(currencies: currencies)
        viewController?.displayCurrencies(viewModel: viewModel)
        
    }
    
    private func parseToCellViewModel(currency: Currency) -> CurrencyViewModel {
        let viewModel = CurrencyViewModel(imageFlagName: currency.iso.lowercased(), country: currency.country, changeDescription: "1 USD = \(currency.buyRate) \(currency.iso.uppercased())")
        return viewModel
    }
}
