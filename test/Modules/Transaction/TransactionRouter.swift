//
//  TransactionRouter.swift
//  test
//
//  Created by Daniel Salhuana on 4/6/20.
//  Copyright (c) 2020 Daniel Salhuana. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol TransactionRoutingLogic {
    func routeToCurrenciesView()
    func routeToError(errorMessage: String)
}

protocol TransactionDataPassing {
    var dataStore: TransactionDataStore? { get }
}

class TransactionRouter: NSObject, TransactionRoutingLogic, TransactionDataPassing {
    weak var viewController: TransactionViewController?
    var dataStore: TransactionDataStore?
    
    func routeToCurrenciesView() {
        if let viewController = viewController {
            let navCon = viewController.navigationController
            let currenciesViewController = CurrenciesViewController()
            if var destinationStore = currenciesViewController.router?.dataStore {
                passCurrenciesToCurrenciesView(source: dataStore, destination: &destinationStore)
            }
            navCon?.pushViewController(currenciesViewController, animated: true)
        }
    }
    
    func routeToError(errorMessage: String) {
        let alertView = UIAlertController(title: "Ups", message: errorMessage, preferredStyle: .alert)
        alertView.addAction(UIAlertAction(title: "Ok", style: .default, handler: nil))
        viewController?.present(alertView, animated: true)
    }
    
    // MARK: Passing data
    
    func passCurrenciesToCurrenciesView(source: TransactionDataStore?, destination: inout CurrenciesDataStore) {
        destination.currencies = source?.currencies
    }
}
