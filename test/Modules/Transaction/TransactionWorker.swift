//
//  TransactionWorker.swift
//  test
//
//  Created by Daniel Salhuana on 4/6/20.
//  Copyright (c) 2020 Daniel Salhuana. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol TransactionWorkerInterface: class {
    func doGetConversionRate(completionHandler:(Data?) -> Void)
    func doParseConversionRates(data: Data) -> [Currency]
    func convertCurrency(target: Currency, source: Currency, amount: Double) -> Double
    func sellCurrencyPrice(from: Currency, to: Currency) -> Double
    func buyCurrencyPrice(from: Currency, to: Currency) -> Double
}

class TransactionWorker: TransactionWorkerInterface {
    
    func doGetConversionRate(completionHandler:(Data?) -> Void) {
        guard let path = Bundle.main.path(forResource: "moneydata", ofType: "json") else {
            completionHandler(nil)
            return
        }
        completionHandler(try? Data(contentsOf: URL(fileURLWithPath: path), options: .mappedIfSafe))
    }
    
    func doParseConversionRates(data: Data) -> [Currency] {
        return (try? JSONDecoder().decode([Currency].self, from: data)) ?? []
    }
    
    func convertCurrency(target: Currency, source: Currency, amount: Double) -> Double {
        let dollarAmount = source.sellRate * amount
        return dollarAmount / target.buyRate
    }
    
    func sellCurrencyPrice(from: Currency, to: Currency) -> Double {
        return to.sellRate / from.buyRate
    }

    func buyCurrencyPrice(from: Currency, to: Currency) -> Double {
        return to.buyRate / from.sellRate
    }
}
