//
//  TransactionViewControllerTests.swift
//  test
//
//  Created by Daniel Salhuana on 4/7/20.
//  Copyright (c) 2020 Daniel Salhuana. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import test
import XCTest

class TransactionViewControllerTests: XCTestCase {
    // MARK: Subject under test
    
    var sut: TransactionViewController!
    var window: UIWindow!
    
    // MARK: Test lifecycle
    
    override func setUp() {
        super.setUp()
        window = UIWindow()
        setupTransactionViewController()
    }
    
    override func tearDown() {
        window = nil
        super.tearDown()
    }
    
    // MARK: Test setup
    
    func setupTransactionViewController() {
        let bundle = Bundle.main
        let storyboard = UIStoryboard(name: "Main", bundle: bundle)
        sut = storyboard.instantiateViewController(withIdentifier: "TransactionViewController") as! TransactionViewController
    }
    
    func loadView() {
        window.addSubview(sut.view)
        RunLoop.current.run(until: Date())
    }
    
    // MARK: Test doubles
    
    class TransactionBusinessLogicSpy: TransactionBusinessLogic {
        func doLoadCurrencies(request: Transaction.CurrencyLoad.Request) {
            
        }
        
        func docChangeAmount(request: Transaction.AmountChange.Request) {
            
        }
        
        func doChangeCurrency(request: Transaction.CurrencyChange.Request) {
            
        }
        
        func doLoadCurrencySelected(request: Transaction.CurrencySelected.Request) {
            
        }
        
        func doLoadExchangeCurrencies(request: Transaction.ExchanceCurrencies.Request) {
            
        }
        
//        var doSomethingCalled = false
//
//        func doSomething(request: Transaction.Something.Request) {
//            doSomethingCalled = true
//        }
    }
    
    // MARK: Tests
    
//    func testShouldDoSomethingWhenViewIsLoaded() {
//        // Given
//        let spy = TransactionBusinessLogicSpy()
//        sut.interactor = spy
//        
//        // When
//        loadView()
//        
//        // Then
//        XCTAssertTrue(spy.doSomethingCalled, "viewDidLoad() should ask the interactor to do something")
//    }
    
//    func testDisplaySomething() {
//        // Given
//        let viewModel = Transaction.Something.ViewModel()
//
//        // When
//        loadView()
//        sut.displaySomething(viewModel: viewModel)
//
//        // Then
//        //XCTAssertEqual(sut.nameTextField.text, "", "displaySomething(viewModel:) should update the name text field")
//    }
}
